====ACDC all spawn decompiler дл¤ «ова ѕрип¤ти ====

ƒл¤ запуска программы установите ActivePerl


»спользование:   acdc_cop -d *.spawn [-o outdir] [-w] [-l] [-split_spawns] [-ls] [-split_spawns] [-graph]
		 acdc_cop -c all.ltx [-f flag1[,...]] [-a level:point] [-o outfile] [-ls]

 лючи:
-d 		- декомпил¤ци¤
-с 		- компил¤ци¤
-ls 		- декомпил¤ци¤/компил¤ци¤ level.spawn
-a		- помен¤ть при компил¤ции позицию актора
-w		- конвертировать апдейт-пакеты некоторого оружи¤ в формат «ѕ 
(дл¤ спавнов, сделанных с помощью aiwrapper -upgrade 3502)
-l		- разбирать спавн по вертексам согласно гейм-графу “„
(дл¤ спавнов, сделанных с помощью aiwrapper -upgrade 3502)

-split_spawns - разбор all.spawn на level.spawn и level.game дл¤ каждого уровн¤. ACDC должен лежать 
в папке gamedata/spawns, причем в папке gamedata/levels должны лежать содержащиес¤ в спавне уровни, или хот¤ бы
level.spawn от них. —крипт сохранит старые level.spawn и level.game как *bak файлы, и запишет на их место новые.
ƒостоинство такого способа - сохран¤ютс¤ оригинальные имена граф-поинтов.

-graph - используетс¤ совместно с -split_spawns. C таким ключом скрипт прочитает граф-поинты из section4.bin.
ƒостоинство такого способа - нет необходимости в оригинальных level.spawn, но оригинальные имена граф-поинтов 
будут заменены на заново сгенерированные. Ёто происходит потому, что в section4.bin не хран¤тс¤ имена граф-поинтов.
¬осстанов¤тс¤ только имена граф-поинтов, ¤вл¤ющихс¤ пунктами назначени¤ левел-чейнджеров.

Credits:
Bardak, Kolmogor (основной скрипт)
K.D. (поддержка level.spawn и функци¤ -split_spawns)